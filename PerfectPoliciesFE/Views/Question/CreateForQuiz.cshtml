@model PerfectPoliciesFE.Models.QuestionModels.QuestionCreate

@{
    ViewData["Title"] = "CreateForQuiz";
}

<h1>CreateForQuiz</h1>

<h4>QuestionCreate</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Topic" class="control-label"></label>
                <input asp-for="Topic" class="form-control" />
                <span asp-validation-for="Topic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="QuestionText" class="control-label"></label>
                <input asp-for="QuestionText" class="form-control" />
                <span asp-validation-for="QuestionText" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" readonly/>
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            @Html.HiddenFor(c => c.QuizId)
            @Html.HiddenFor(c => c.Image)
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="row">
    @using (Html.BeginForm("UploadFile", "Question", FormMethod.Post, new { @class = "dropzone", @id = "dropzone-form", enctype = "multipart/form-data" }))
    {
        <div class="fallback">
            @Html.TextBoxFor(m => m.Image, new { type = "file" })
            <input type="submit" />
        </div>
    }
</div>

<script src="~/lib/dropzone/min/dropzone.min.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

<script type="text/javascript">
    Dropzone.options.dropzoneForm = {
        maxFiles: 1,
        acceptedFiles: "image/*",
        success: function (file, response) {
            $("#Image").val(file.upload.filename)
            console.log("Filename: " + file.upload.filename);
            file.previewElement.classList.add("dz-success");
        },
        error: function (file, message) {
            alert(message);
        }
    }
</script>

<div>
    @Html.ActionLink("Back To List", "QuestionsByQuizId", "Question", new { id = Model.QuizId })
</div>