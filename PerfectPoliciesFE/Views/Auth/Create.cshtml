@model PerfectPoliciesFE.Models.UserInfo

@{
    ViewData["Title"] = "Create";

    if (ViewBag.Error != null)
    {
        @Html.Raw("<script> alert('" + ViewBag.Error.ToString() + "') </script>")
    }

    @using Microsoft.AspNetCore.Http;
    @inject IHttpContextAccessor HttpContextAccessor;

    string mainId;
    string quizId;

    if (@HttpContextAccessor.HttpContext.Session.GetString("QuestionId").Equals(""))
    // If QuestionId is NOT present, set mainId to the quizId instead
    {
        mainId = @HttpContextAccessor.HttpContext.Session.GetString("QuizId");
        quizId = null;
    }
    else
    // Else (questionId is present) mainId is QuestionId and quizId is QuizId
    {
        mainId = @HttpContextAccessor.HttpContext.Session.GetString("QuestionId");
        quizId = @HttpContextAccessor.HttpContext.Session.GetString("QuizId");
    }

    // url when on question view: controller/action/quizId
    // url when on option view:   controller/action/questionId?quizId
    //     I really shot myself in the foot with this one

    string action = @HttpContextAccessor.HttpContext.Session.GetString("Action");
    string controller = @HttpContextAccessor.HttpContext.Session.GetString("Controller");
}

<h1>Create</h1>

<h4>UserInfo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", @action, @controller, new { id = mainId, quizId = @quizId })
</div>

