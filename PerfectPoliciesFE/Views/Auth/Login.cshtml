@model PerfectPoliciesFE.Models.UserInfo

@{
    ViewData["Title"] = "Login";

    TempData.Keep();
    if (ViewBag.Error != null)
    {
        @Html.Raw("<script> alert('" + ViewBag.Error.ToString() + "') </script>") 
    }

    string action = "Index";
    string controller = "Home";
    string quizId = null;
    string questionId = null;

    try
    {
        action = TempData["Action"].ToString();
        controller = TempData["Controller"].ToString();
        quizId = TempData["QuizId"].ToString();
        questionId = TempData["QuestionId"].ToString();
    } catch(Exception) { }

    TempData.Keep();
    }

<h1>Login</h1>

<h4>UserInfo</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Log In" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Create Account", "Create", "Auth", new { id = questionId, quizId = @quizId })
    <br />
    @Html.ActionLink("Back to List", @action, @controller, new { id = questionId, quizId = @quizId })

</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
